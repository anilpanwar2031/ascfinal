# Generated by Django 4.1.3 on 2022-11-21 12:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+919999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('type', models.CharField(choices=[('OA', 'Organization Admin'), ('SA', 'Super Admin'), ('NU', 'Normal User')], default='NU', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('primary_name', models.CharField(max_length=200)),
                ('primary_title', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+919999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('address', models.TextField(default='')),
                ('city', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('zip', models.CharField(max_length=200)),
                ('note', models.TextField(default='')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GS1_Company_Prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('GTIN', models.CharField(blank=True, max_length=255, null=True)),
                ('GTIN_8', models.CharField(blank=True, max_length=255, null=True)),
                ('GTIN_12_UPC', models.CharField(blank=True, max_length=255, null=True)),
                ('GTIN_13_EAN', models.CharField(blank=True, max_length=255, null=True)),
                ('Brand_Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Brand_1_Language', models.CharField(blank=True, max_length=255, null=True)),
                ('Product_Description', models.CharField(blank=True, max_length=255, null=True)),
                ('Desc_1_Language', models.CharField(blank=True, max_length=255, null=True)),
                ('Product_Industry', models.CharField(blank=True, max_length=255, null=True)),
                ('Packaging_Level', models.CharField(blank=True, max_length=255, null=True)),
                ('Is_Variable', models.BooleanField(blank=True, null=True)),
                ('Is_Purchasable', models.BooleanField(blank=True, null=True)),
                ('Status_Label', models.CharField(blank=True, max_length=255, null=True)),
                ('Height', models.CharField(blank=True, max_length=255, null=True)),
                ('Width', models.CharField(blank=True, max_length=255, null=True)),
                ('Depth', models.CharField(blank=True, max_length=255, null=True)),
                ('Dimension_Measure', models.CharField(blank=True, max_length=255, null=True)),
                ('Gross_Weight', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Weight', models.CharField(blank=True, max_length=255, null=True)),
                ('Weight_Measure', models.CharField(blank=True, max_length=255, null=True)),
                ('SKU', models.CharField(blank=True, max_length=255, null=True)),
                ('Sub_brand_Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Product_Description_Short', models.CharField(blank=True, max_length=255, null=True)),
                ('Label_Description', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Content_1_Count', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Content_1_Unit_of_Measure', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Content_2_Count', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Content_2_Unit_of_Measure', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Content_3_Count', models.CharField(blank=True, max_length=255, null=True)),
                ('Net_Content_3_Unit_of_Measure', models.CharField(blank=True, max_length=255, null=True)),
                ('Brand_Name_2', models.CharField(blank=True, max_length=255, null=True)),
                ('Brand_2_Language', models.CharField(blank=True, max_length=255, null=True)),
                ('Description_2', models.CharField(blank=True, max_length=255, null=True)),
                ('Desc_2_Language', models.CharField(blank=True, max_length=255, null=True)),
                ('Global_Product_Classification', models.CharField(blank=True, max_length=255, null=True)),
                ('Image_URL', models.FileField(null=True, upload_to='media/uploads/')),
                ('Image_URL_Validation', models.CharField(blank=True, max_length=255, null=True)),
                ('Target_Markets', models.CharField(blank=True, max_length=255, null=True)),
                ('Last_Modified_Date', models.DateField(blank=True, null=True)),
                ('test_for', models.TextField(blank=True, null=True)),
                ('organization', models.ManyToManyField(to='app1.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_result', models.CharField(max_length=230)),
                ('datetime', models.DateTimeField()),
                ('administrator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_customuser', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.organization'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
